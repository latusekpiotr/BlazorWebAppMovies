@page "/weather"
@attribute [StreamRendering]
@using BlazorWebAppMovies.Services
@using BlazorWebAppMovies.Models
@inject IWeatherService WeatherService

<PageTitle>Weather</PageTitle>

<h1>Weather - London, UK</h1>

<p>Real-time weather data from Open-Meteo API.</p>

@if (forecasts == null)
{
    <p><em>Loading weather data...</em></p>
}
else if (forecasts.Length == 0)
{
    <p><em>No weather data available.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC°</td>
                    <td>@forecast.TemperatureF°</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await WeatherService.GetWeatherForecastAsync();
        }
        catch (Exception)
        {
            forecasts = Array.Empty<WeatherForecast>();
        }
    }
}
