@page "/movies/details"
@using Microsoft.EntityFrameworkCore
@using BlazorWebAppMovies.Models
@inject IDbContextFactory<BlazorWebAppMovies.Data.BlazorWebAppMoviesContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Movie Details</PageTitle>

<div class="details-header">
    <h1 class="display-5 text-primary mb-2">ðŸŽ¬ Movie Details</h1>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/movies" class="text-decoration-none">Movies</a></li>
            <li class="breadcrumb-item active" aria-current="page">Details</li>
        </ol>
    </nav>
</div>

<div class="movie-details-container">
    @if (movie is null)
    {
        <div class="loading-container">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3 text-muted">Loading movie details...</p>
        </div>
    }
    else {
        <div class="movie-card">
            <div class="card-header">
                <h2 class="movie-title">@movie.Title</h2>
                <div class="movie-rating">
                    <span class="rating-badge">â˜… @movie.Rating</span>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-calendar-alt"></i> Release Date
                            </div>
                            <div class="detail-value">@movie.ReleaseDate.ToString("MMMM dd, yyyy")</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-theater-masks"></i> Genre
                            </div>
                            <div class="detail-value">@movie.Genre</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-dollar-sign"></i> Price
                            </div>
                            <div class="detail-value price">@movie.Price.ToString("C")</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="action-buttons">
                    <a href="@($"/movies/edit?id={movie.Id}")" class="btn btn-primary btn-lg me-3">
                        <i class="fas fa-edit me-2"></i>Edit Movie
                    </a>
                    <a href="/movies" class="btn btn-outline-secondary btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>Back to List
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private Movie? movie;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        movie = await context.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
