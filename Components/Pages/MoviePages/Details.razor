@page "/movies/details"
@using Microsoft.EntityFrameworkCore
@using BlazorWebAppMovies.Models
@inject IDbContextFactory<BlazorWebAppMovies.Data.BlazorWebAppMoviesContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Movie Details</PageTitle>

<div class="page-header">
    <div class="container">
        <h1 class="page-title">üé¨ Movie Details</h1>
        <p class="page-subtitle">Explore the complete movie information</p>
    </div>
</div>

<div class="container">
    @if (movie is null)
    {
        <div class="movie-details-card">
            <div class="loading-container">
                <div class="loading-spinner"></div>
                <span>Loading movie details...</span>
            </div>
        </div>
    }
    else 
    {
        <div class="movie-details-card">
            <div class="movie-header">
                <h2 class="movie-title">
                    üé¨ @movie.Title
                    <span class="movie-rating">@movie.Rating</span>
                </h2>
            </div>
            
            <div class="movie-body">
                <div class="movie-details-grid">
                    <div class="detail-item">
                        <div class="detail-label">
                            üìÖ Release Date
                        </div>
                        <p class="detail-value date">@movie.ReleaseDate.ToString("MMMM dd, yyyy")</p>
                    </div>
                    
                    <div class="detail-item">
                        <div class="detail-label">
                            üé≠ Genre
                        </div>
                        <p class="detail-value genre">@movie.Genre</p>
                    </div>
                    
                    <div class="detail-item">
                        <div class="detail-label">
                            üí∞ Price
                        </div>
                        <p class="detail-value price">@movie.Price.ToString("C")</p>
                    </div>
                    
                    <div class="detail-item">
                        <div class="detail-label">
                            ‚≠ê Rating
                        </div>
                        <p class="detail-value">@movie.Rating</p>
                    </div>
                </div>
            </div>
            
            <div class="actions-section">
                <a href="@($"/movies/edit?id={movie.Id}")" class="action-btn action-btn-primary">
                    ‚úèÔ∏è Edit Movie
                </a>
                <a href="/movies" class="action-btn action-btn-secondary">
                    ‚Üê Back to Movies
                </a>
            </div>
        </div>
    }
</div>

@code {
    private Movie? movie;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        movie = await context.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
